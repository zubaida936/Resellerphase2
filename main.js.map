{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/navbar/navbar/navbar.component.ts","./src/app/navbar/navbar/navbar.component.html","./src/app/pagination/pagination.component.ts","./src/app/sections/section-dashboard/section-dashboard.component.ts","./src/app/sections/section-dashboard/section-dashboard.component.html","./src/app/sections/section-partners/section-partners/section-partners.component.ts","./src/app/sections/section-partners/section-partners/section-partners.component.html","./src/app/sections/section-products/section-products.component.ts","./src/app/sections/section-products/section-products.component.html","./src/app/sidebar/sidebar/sidebar.component.ts","./src/app/sidebar/sidebar/sidebar.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SectionDashboardComponent } from './sections/section-dashboard/section-dashboard.component';\nimport { SectionPartnersComponent } from './sections/section-partners/section-partners/section-partners.component';\nimport { SectionProductsComponent } from './sections/section-products/section-products.component';\n\n\n\nconst routes: Routes = [\n  { path: 'dashboard', component: SectionDashboardComponent },\n  { path: 'products', component: SectionProductsComponent },\n  { path: 'partners', component: SectionPartnersComponent },\n\n  { path: '', redirectTo: '/dashboard', pathMatch: 'full'},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'reseller-management-app';\n  subtitle = 'Isolutions Dashboard';\n}\n","\n  <app-navbar  class=\"navbar navbar-custom\"></app-navbar> \n\n<div class=\"container-fluid\">\n  <div class=\"row\" id=\"mainContent\">\n    \n   <app-sidebar  class=\"sidebar\"></app-sidebar>\n\n    <div class=\"col-sm-9 ml-sm-auto col-md-10 pt-3\" id=\"dashboard\">\n      <router-outlet></router-outlet>\n    </div>\n\n  </div>\n</div>\n\n\n\n\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar/navbar.component';\nimport { SidebarComponent } from './sidebar/sidebar/sidebar.component';\nimport { SectionPartnersComponent } from './sections/section-partners/section-partners/section-partners.component';\nimport { SectionProductsComponent } from './sections/section-products/section-products.component';\nimport { SectionDashboardComponent } from './sections/section-dashboard/section-dashboard.component';\n\nimport { HttpClient, HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { PaginationComponent } from './pagination/pagination.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    SidebarComponent,\n    SectionDashboardComponent,\n    SectionPartnersComponent,\n    SectionProductsComponent,\n    PaginationComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [\n    HttpClient,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<a class=\"navbar-brand\" href=\"#\">\n    <span class=\"logo logo-left\">reseller</span>\n    <span class=\"logo logo-right\">Management</span>\n</a>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-pagination',\n  templateUrl: './pagination.component.html',\n  styleUrls: ['./pagination.component.css']\n})\nexport class PaginationComponent implements OnInit {\n\n  @Input() page: number | undefined;\n  @Input() count: number | undefined;\n  @Input() perPage: number | undefined;\n  @Input() pagesToShow: number | undefined;\n  @Input() loading: boolean | undefined;\n\n  @Output() goPrev = new EventEmitter<boolean>();\n  @Output() goNext = new EventEmitter<boolean>();\n  @Output() goPage = new EventEmitter<number>();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onPrev(): void {\n    this.goPrev.emit(true);\n  }\n\n  onNext(): void {\n    this.goNext.emit(true);\n  }\n\n  onPage(n: number): void {\n    this.goPage.emit(n);\n  }\n\n  /*totalPages(): number {\n    return Math.ceil(this.count / this.perPage) || 0;\n  }\n\n  isLastPage(): boolean {\n    return this.perPage * this.page >= this.count;\n  }\n\n  getMin(): number {\n    return ((this.perPage * this.page) - this.perPage) + 1;\n  }\n\n  getMax(): number {\n    let max = this.perPage * this.page;\n    if (max > this.count) {\n      max = this.count;\n    }\n    return max;\n  }\n\n  getPages(): number[] {\n    const totalPages = Math.ceil(this.count / this.perPage);\n    const thisPage = this.page || 1;\n    const pagesToShow = this.pagesToShow || 9;\n    const pages: number[] = [];\n    pages.push(thisPage);\n\n    console.log('Starting loop with: total pages:', totalPages, 'thisPage:', thisPage, 'pagesToShow:', pagesToShow );\n    for (let i = 0; i < pagesToShow - 1; i++) {\n      console.log('pages[]:', pages);\n      if (pages.length < pagesToShow) {\n        if (Math.min.apply(null, pages) > 1) {\n          pages.push(Math.min.apply(null, pages) - 1);\n          console.log('pushing', Math.min.apply(null, pages) - 1, 'onto array');\n        }\n      }\n      \n\n      if (pages.length < pagesToShow) {\n        if (Math.max.apply(null, pages) < totalPages) {\n          pages.push(Math.max.apply(null, pages) + 1);\n          console.log('pushing', Math.max.apply(null, pages) + 1, 'onto array');\n        }\n      }\n    }\n    pages.sort((a, b) => a - b);\n    return pages;\n  }\n  */\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n\n/*\nimport { UserRoleDataModel } from './../../../models/user.role.data';\nimport { UserViewModel } from 'src/models/vw.user';\nimport { Router } from '@angular/router';\nimport { OrderViewModel } from './../../../models/vw_order';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { LocalStorageService } from 'src/servcies/localstorage-service';\nimport { Component, OnInit, ViewEncapsulation, NgZone } from '@angular/core';\nimport { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { ChartDataSets, ChartOptions, ChartType } from 'chart.js';\nimport { Label } from 'ng2-charts';\nimport { Endpoint, Unicode, OrderStatus, Group } from 'src/shared/Endpoint';\nimport { DatePipe } from '@angular/common';\nimport { Utilities } from 'src/shared/utilities';\nimport { HttpRequestService } from 'src/servcies/http-request-service';\n\n*/\n\n@Component({\n  selector: 'app-section-dashboard',\n  templateUrl: './section-dashboard.component.html',\n  styleUrls: ['./section-dashboard.component.css']\n})\nexport class SectionDashboardComponent implements OnInit {\n  //chartOptions: ChartOptions;\n  //statuschartOptions: ChartOptions;\n  //customersChartOptions: ChartOptions;\n  lineChartLegend = true;\n  //chartLabels: Label[] = ['Created Orders'];\n  //chartData: ChartDataSets[];\n  //orderLineChartType: ChartType = 'bar';\n // statuschartLabels: Label[] = [OrderStatus.Executed, OrderStatus.Pending, OrderStatus.Rejected];\n // customerschartLabels: Label[] = [];\n  statuschartData: number[] = [];\n  customerschartData: number[] = [];\n//  statusLineChartType: ChartType = 'pie';\n  pieChartColors = [\n    {\n      backgroundColor: ['rgba(40,191,239,1)', 'rgba(0,81,125,1)', 'rgba(178,41,31,1)'],\n    }\n  ];\n  chartColors = [];\n  customerchartColors = [];\n\n  totalCustomers: number = 0;\n  totalOrders: number = 0;\n  totalUsers: number = 0;\n  totalPending: number = 0;\n  //totalExecuted: number;\n  totalRejected: number = 0;\n // fromSelectedDate: NgbDateStruct;\n  //toSelectedDate: NgbDateStruct;\n  ////currentUser: UserViewModel;\n  //currentUserRoleData: UserRoleDataModel;\n  totalOrdersChart2: string = \"\";\n  onlyExecutedOrders: boolean = false;\n  pageToken: string = '';\n  totalLicenses: number = 0;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<div class=\"container-fluid\">\n    <div class=\"dash_header row\">\n        <div class=\"\" style=\"padding: 0 7px 0 0;\">\n            <div class=\"dash_card\">\n                <img src=\"../../../assets/orders-big-icon(dashboard-page).png\" width=\"23\" id=\"ordr_total\" />\n                <label class=\"dash_header_title\">&nbsp;&nbsp;Orders</label>\n            </div>\n        </div>\n        <div class=\"\" style=\"padding: 0 7px 0 0;\">\n            <div class=\"dash_card\">\n                <img src=\"../../../assets/customers-big-icon(dashboard-page).png\" width=\"23\" />\n                <label class=\"dash_header_title\">&nbsp;&nbsp;Customers</label>\n            </div>\n        </div>\n\n\n        <div class=\"p-0\">\n            <div class=\"dash_card\">\n                <img src=\"../../../assets/users-big-icon(dashboard-page).png\" width=\"23\" />\n                <label class=\"dash_header_title\">&nbsp;&nbsp;{{totalUsers}} Users</label>\n            </div>\n        </div>\n\n\n    </div>\n  \n    <div class=\"row m-t-15\">\n        <div class=\"col-lg-6 col-md-12 col-12 p-0\">\n            <div class=\"div_chart h-100\">\n                <label class=\"cust_title f-productSans\">Orders Status</label>\n                <div class=\" row col-12 m-t-40 justify-content-center\">\n                    <div class=\"chart-wrapper col-12 row\" id=\"status_pie\">\n                      <!----<canvas baseChart [data]=\"statuschartData\" [labels]=\"statuschartLabels\" id=\"pieChartOrders\"\n                            [chartType]=\"statusLineChartType\" width=\"400\" height=\"400\" [options]=\"statuschartOptions\"\n                            [colors]=\"pieChartColors\" (chartClick)=\"chartClicked($event)\" [legend]=\"lineChartLegend\">\n                        </canvas>-->\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-lg-6 col-md-12 col-12 device_chart\">\n            <div class=\"div_chart h-100\">\n                <label class=\"cust_title f-productSans\">Customers</label>\n                <div class=\" row col-12 m-t-40 justify-content-center\">\n                    <div class=\"chart-wrapper col-12 row\" id=\"status_pie\">\n                       <!----<canvas baseChart [data]=\"customerschartData\" [labels]=\"customerschartLabels\" id=\"pieChart2Custs\"\n                            [chartType]=\"statusLineChartType\" [options]=\"customersChartOptions\"\n                            [colors]=\"customerchartColors\" [legend]=\"lineChartLegend\">\n                        </canvas>-->\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n  \n    <div class=\"row m-t-15\">\n        <div class=\"col-12 device_lines\">\n           <!----<div class=\"div_chart\">\n                <label class=\"cust_title f-productSans\">Created Orders</label><span *ngIf=\"totalOrdersChart2 && totalOrdersChart2!= ''\" class=\"sp_total\">{{totalOrdersChart2}}</span>\n                <div class=\"row col-12 div_dates\">\n                    <div class=\"dash_date_p\">\n                        <span (click)=\"fdate.toggle()\" class=\"dash_date_p_span\">\n                            <img src=\"../../../assets/calendar icon.png\" width=\"20\" />\n                        </span>\n                        <input name=\"dp\" [(ngModel)]=\"fromSelectedDate\" ngbDatepicker placeholder='Date(from)'\n                            #fdate=\"ngbDatepicker\" (ngModelChange)=\"selectDate()\" class=\"my-dp\">\n                    </div>\n                    <div class=\"dash_date_p\">\n                        <span (click)=\"tdate.toggle()\" class=\"dash_date_p_span\">\n                            <img src=\"../../../assets/calendar icon.png\" width=\"20\" />\n                        </span>\n                        <input name=\"dp\" placeholder=\"To\" [(ngModel)]=\"toSelectedDate\" ngbDatepicker\n                            placeholder='Date(to)' #tdate=\"ngbDatepicker\" (ngModelChange)=\"selectDate()\" class=\"my-dp\">\n                    </div>\n  \n                    <div class=\"col-lg-3 col-md-4 col-sm-6 col-12 m-t-15 p-0\" style=\"display: flex;margin: 22px 10px 20px 0 !important;\">\n                        <input style=\"width: 20px;margin: 0 10px 0 10px;height: 30px;\" type=\"checkbox\" [(ngModel)]=\"onlyExecutedOrders\"\n                        (change)=\"getOrders()\">\n                        <label class=\"m-t-5\">Only executed Orders</label>\n                    </div>\n  \n                </div>\n  \n                <div class=\"charts row m-t-20\">\n                    <div class=\"chart-wrapper col-12\" id=\"email\">\n                        <canvas baseChart id=\"lineChart\" width=\"400\" height=\"400\" [datasets]=\"chartData\"\n                            [labels]=\"chartLabels\" [colors]=\"chartColors\" [options]=\"chartOptions\"\n                            [legend]=\"lineChartLegend\" [chartType]=\"orderLineChartType\">\n                        </canvas>\n                    </div>\n                </div>\n            </div>-->\n        </div>\n    </div>\n  \n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { Order } from 'src/app/shared/order';\n\n@Component({\n  selector: 'app-section-partners',\n  templateUrl: './section-partners.component.html',\n  styleUrls: ['./section-partners.component.css']\n})\nexport class SectionPartnersComponent implements OnInit {\n\n  constructor() {\n\n}\norders: Order[] | undefined;\n  ngOnInit(): void {\n  }\n\n}\n","\n<div class=\"content\">\n  <h3>\n    Partners:\n  </h3><br>\n  <table >\n    <thead >\n      <tr>\n        <th>ID</th>\n        <th>Domain</th>\n        <th>Region</th>\n        <th>Email</th>\n        <th>Created date</th>\n      </tr>\n    </thead>\n    <tbody>\n     <!---- <tr *ngFor=\"let order of orders\">\n        <td>{{ order.id }}</td>\n        <td>{{ order.customer.name }}</td>\n        <td>{{ order.total }}</td>\n        <td>{{ order.placed | date: 'short' }}</td>\n       \n        <td>Status</td>\n      </tr>-->\n      <tr >\n        <td>1</td>\n        <td>ismena.com</td>\n        <td>KSA</td>\n        <td>admin@ismena.com</td>\n       \n        <td>18/6/2022</td>\n      </tr>\n\n      <tr >\n        <td>2</td>\n        <td>jazira.com</td>\n        <td>Jordan</td>\n        <td>admin@jazeera.com</td>\n       \n        <td>18/7/2022</td>\n      </tr>\n\n    </tbody>\n  </table>\n\n  <!--<app-pagination\n  (goPage)=\"goToPage($event)\"\n  (goPrev)=\"goToPrevious()\"\n  (goNext)=\"goToNext()\"\n  [page]=\"page\"\n  [perPage]=\"limit\"\n  [count]=\"total\">\n  </app-pagination>-->\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-section-products',\n  templateUrl: './section-products.component.html',\n  styleUrls: ['./section-products.component.css']\n})\nexport class SectionProductsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"content\">\n\n    <div class=\"row-fluid cards\">\n      <div class=\"card-deck\">\n        \n        <div class=\"card mb-3 shadow card-theme\">\n          <div class=\"card-header card-header-theme\">\n            <h5>Product 1</h5> \n          </div>\n          <div class=\"card-body\">\n           <!-- <app-bar-chart></app-bar-chart>-->\n          </div>\n        </div>\n        \n        <div class=\"card mb-3 shadow card-theme\">\n          <div class=\"card-header card-header-theme\">\n            <h5>Product 2</h5> \n          </div>\n          <div class=\"card-body\">\n           <!--- <app-pie-chart *ngIf='salesDataByCustomer' [inputData]='salesDataByCustomer' [limit]='3'></app-pie-chart>-->\n          </div>\n        </div>\n\n\n        <div class=\"card mb-3 shadow card-theme\">\n          <div class=\"card-header card-header-theme\">\n            <h5>Product 3</h5> \n          </div>\n          <div class=\"card-body\">\n            <!--- <app-pie-chart *ngIf='salesDataByState' [inputData]='salesDataByState' [limit]='5'></app-pie-chart>-->\n          </div>\n        </div>\n\n      </div>\n    </div>\n\n\n    <div class=\"row-fluid cards\">\n        <div class=\"card-header card-header theme\">\n          <h5>Product 4</h5>\n        </div>\n        <div class=\"card-body\">\n          <!--- <app-line-chart></app-line-chart>-->\n        </div>\n      </div>\n    </div>\n  <!--</div>-->\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<ul class=\"nav nav-pills flex-column\">\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"/dashboard\">Dashboard</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"/partners\">Partners</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"/products\">Products</a>\n    </li>\n  \n  </ul>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}